map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;

  '' $scheme;
}

map $http_upgrade $proxy_connection {
  default upgrade;

  '' '';
}

gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

proxy_http_version 1.1;
proxy_buffering off;

proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

{{ range $vhost_project_name, $containers := groupByMulti $ "Env.VHOST_PROJECT_NAME" "," }}
  {{ range $container := $containers }}
    {{ range $address := $container.Addresses }}
      {{ if eq $address.Port "80" }}
        {{ if ($container.Env.VHOST_PRIMARY_SERVICE) and (eq $container.Env.VHOST_PRIMARY_SERVICE "Yes") }}
          upstream {{ $vhost_project_name }} {
             server {{ $address.IP }}:{{ $address.Port }};
          }

          server {
            listen 80;
            server_name {{ $vhost_project_name }}.<%= @server_name %>;

            location / {
              proxy_pass http://{{ $vhost_project_name }};
            }
          }
        {{ else }}
          upstream {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }} {
             server {{ $address.IP }}:{{ $address.Port }};
          }

          server {
            listen 80;
            server_name {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.<%= @server_name %>;

            location / {
              proxy_pass http://{{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }};
            }
          }
        {{ end }}
      {{ else if eq $address.Port "443" }}
        {{ if ($container.Env.VHOST_PRIMARY_SERVICE) and (eq $container.Env.VHOST_PRIMARY_SERVICE "Yes") }}
          upstream {{ $vhost_project_name }}.ssl {
             server {{ $address.IP }}:{{ $address.Port }};
          }

          server {
            listen 443 ssl;
            server_name {{ $vhost_project_name }}.<%= @server_name %>;

            ssl_certificate /vhost/ssl/certs/vhost_wildcard.crt;
            ssl_certificate_key /vhost/ssl/private/vhost.key;

            location / {
              proxy_pass https://{{ $vhost_project_name }}.ssl;
            }
          }
        {{ else }}
          upstream {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.ssl {
             server {{ $address.IP }}:{{ $address.Port }};
          }

          server {
            listen 443 ssl;
            server_name {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.<%= @server_name %>;

            ssl_certificate /vhost/ssl/certs/vhost_wildcard.crt;
            ssl_certificate_key /vhost/ssl/private/vhost.key;

            location / {
              proxy_pass https://{{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.ssl;
            }
          }
        {{ end }}
      {{ end }}
    {{ end }}
  {{ end }}
{{ end }}

{{ range $vhost_domain_aliases, $containers := groupByMulti $ "Env.VHOST_DOMAIN_ALIASES" "," }}
  {{ range $container := $containers }}
    {{ range $address := $container.Addresses }}
      {{ if eq $address.Port "80" }}
        upstream {{ $vhost_domain_aliases }} {
           server {{ $address.IP }}:{{ $address.Port }};
        }

        server {
          listen 80;
          server_name {{ $vhost_domain_aliases }};

          location / {
            proxy_pass http://{{ $vhost_domain_aliases }};
          }
        }
      {{ else if eq $address.Port "443" }}
        upstream {{ $vhost_domain_aliases }}.ssl {
           server {{ $address.IP }}:{{ $address.Port }};
        }

        server {
          listen 443 ssl;
          server_name {{ $vhost_domain_aliases }};

          location / {
            proxy_pass https://{{ $vhost_domain_aliases }}.ssl;
          }
        }
      {{ end }}
    {{ end }}
  {{ end }}
{{ end }}
