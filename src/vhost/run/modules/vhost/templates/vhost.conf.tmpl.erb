<% if @http_basic_auth == "On" -%>
  auth_basic "Authentication Required";
  auth_basic_user_file "/etc/htpasswd/.htpasswd";
<% end -%>

map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;

  '' $scheme;
}

map $http_upgrade $proxy_connection {
  default upgrade;

  '' '';
}

gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

proxy_http_version 1.1;
proxy_buffering off;
proxy_redirect off;

proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

{{ range $vhost_project_name, $containers := groupByMulti $ "Env.VHOST_PROJECT_NAME" "," }}
  {{ range $container := $containers }}
    {{ range $address := $container.Addresses }}
      {{ if eq $address.Port "80" }}
        {{ if $container.Env.VHOST_PRIMARY_SERVICE }}
          {{ if eq $container.Env.VHOST_PRIMARY_SERVICE "True" }}
            upstream {{ $vhost_project_name }} {
              server {{ $address.IP }}:{{ $address.Port }} max_fails=0;
            }

            server {
              listen 80;
              server_name {{ $vhost_project_name }}.<%= @server_name %>;

              location / {
                {{ if $container.Env.VHOST_HTTP_BASIC_AUTH }}
                  {{ if eq $container.Env.VHOST_HTTP_BASIC_AUTH "On" }}
                    auth_basic "Authentication Required";
                    auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.{{ $container.Env.VHOST_SERVICE_NAME }}.htpasswd";
                  {{ else if eq $container.Env.VHOST_HTTP_BASIC_AUTH "Off" }}
                    auth_basic off;
                  {{ end }}
                {{ else }}
                  <% if @http_basic_auth_random == "On" -%>
                    auth_basic "Authentication Required";
                    auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.htpasswd";
                  <% end -%>
                {{ end }}

                proxy_pass http://{{ $vhost_project_name }};
              }
            }
          {{ end }}
        {{ end }}

        upstream {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }} {
          server {{ $address.IP }}:{{ $address.Port }} max_fails=0;
        }

        server {
          listen 80;
          server_name {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.<%= @server_name %>;

          location / {
            {{ if $container.Env.VHOST_HTTP_BASIC_AUTH }}
              {{ if eq $container.Env.VHOST_HTTP_BASIC_AUTH "On" }}
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.{{ $container.Env.VHOST_SERVICE_NAME }}.htpasswd";
              {{ else if eq $container.Env.VHOST_HTTP_BASIC_AUTH "Off" }}
                auth_basic off;
              {{ end }}
            {{ else }}
              <% if @http_basic_auth_random == "On" -%>
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.htpasswd";
              <% end -%>
            {{ end }}

            proxy_pass http://{{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }};
          }
        }
      {{ else if eq $address.Port "443" }}
        {{ if $container.Env.VHOST_PRIMARY_SERVICE }}
          {{ if eq $container.Env.VHOST_PRIMARY_SERVICE "True" }}
            upstream {{ $vhost_project_name }}.ssl {
              server {{ $address.IP }}:{{ $address.Port }} max_fails=0;
            }

            server {
              listen 443 ssl;
              server_name {{ $vhost_project_name }}.<%= @server_name %>;

              ssl_certificate /vhost/ssl/certs/vhost_wildcard.crt;
              ssl_certificate_key /vhost/ssl/private/vhost.key;

              location / {
                {{ if $container.Env.VHOST_HTTP_BASIC_AUTH }}
                  {{ if eq $container.Env.VHOST_HTTP_BASIC_AUTH "On" }}
                    auth_basic "Authentication Required";
                    auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.{{ $container.Env.VHOST_SERVICE_NAME }}.htpasswd";
                  {{ else if eq $container.Env.VHOST_HTTP_BASIC_AUTH "Off" }}
                    auth_basic off;
                  {{ end }}
                {{ else }}
                  <% if @http_basic_auth_random == "On" -%>
                    auth_basic "Authentication Required";
                    auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.htpasswd";
                  <% end -%>
                {{ end }}

                proxy_pass https://{{ $vhost_project_name }}.ssl;
              }
            }
          {{ end }}
        {{ end }}

        upstream {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.ssl {
          server {{ $address.IP }}:{{ $address.Port }} max_fails=0;
        }

        server {
          listen 443 ssl;
          server_name {{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.<%= @server_name %>;

          ssl_certificate /vhost/ssl/certs/vhost_wildcard.crt;
          ssl_certificate_key /vhost/ssl/private/vhost.key;

          location / {
            {{ if $container.Env.VHOST_HTTP_BASIC_AUTH }}
              {{ if eq $container.Env.VHOST_HTTP_BASIC_AUTH "On" }}
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.{{ $container.Env.VHOST_SERVICE_NAME }}.htpasswd";
              {{ else if eq $container.Env.VHOST_HTTP_BASIC_AUTH "Off" }}
                auth_basic off;
              {{ end }}
            {{ else }}
              <% if @http_basic_auth_random == "On" -%>
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $vhost_project_name }}.htpasswd";
              <% end -%>
            {{ end }}

            proxy_pass https://{{ $container.Env.VHOST_SERVICE_NAME }}.{{ $vhost_project_name }}.ssl;
          }
        }
      {{ end }}
    {{ end }}
  {{ end }}
{{ end }}

{{ range $vhost_domain_aliases, $containers := groupByMulti $ "Env.VHOST_DOMAIN_ALIASES" "," }}
  {{ range $container := $containers }}
    {{ range $address := $container.Addresses }}
      {{ if eq $address.Port "80" }}
        upstream {{ $vhost_domain_aliases }} {
          server {{ $address.IP }}:{{ $address.Port }} max_fails=0;
        }

        server {
          listen 80;
          server_name {{ $vhost_domain_aliases }};

          location / {
            {{ if $container.Env.VHOST_HTTP_BASIC_AUTH }}
              {{ if eq $container.Env.VHOST_HTTP_BASIC_AUTH "On" }}
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $container.Env.VHOST_PROJECT_NAME }}.{{ $container.Env.VHOST_SERVICE_NAME }}.htpasswd";
              {{ else if eq $container.Env.VHOST_HTTP_BASIC_AUTH "Off" }}
                auth_basic off;
              {{ end }}
            {{ else }}
              <% if @http_basic_auth_random == "On" -%>
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $container.Env.VHOST_PROJECT_NAME }}.htpasswd";
              <% end -%>
            {{ end }}

            proxy_pass http://{{ $vhost_domain_aliases }};
          }
        }
      {{ else if eq $address.Port "443" }}
        upstream {{ $vhost_domain_aliases }}.ssl {
          server {{ $address.IP }}:{{ $address.Port }} max_fails=0;
        }

        server {
          listen 443 ssl;
          server_name {{ $vhost_domain_aliases }};

          location / {
            {{ if $container.Env.VHOST_HTTP_BASIC_AUTH }}
              {{ if eq $container.Env.VHOST_HTTP_BASIC_AUTH "On" }}
                auth_basic "Authentication Required";
                auth_basic_user_file "/etc/htpasswd/containers/{{ $container.Env.VHOST_PROJECT_NAME }}.{{ $container.Env.VHOST_SERVICE_NAME }}.htpasswd";
              {{ else if eq $container.Env.VHOST_HTTP_BASIC_AUTH "Off" }}
                auth_basic off;
              {{ end }}
            {{ end }}

            proxy_pass https://{{ $vhost_domain_aliases }}.ssl;
          }
        }
      {{ end }}
    {{ end }}
  {{ end }}
{{ end }}
